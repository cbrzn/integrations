#import { Module } into Http from "wrap://ens/http.polywrap.eth"

type Module {
  catFile(
    cid: String!
    catFileOptions: CatFileOptions
    ipfs: IpfsOptions!
  ): Bytes!

  catFileToString(
    cid: String!
    catFileOptions: CatFileOptions
    ipfs: IpfsOptions!
  ): String!

  resolve(
    cid: String!
    ipfs: IpfsOptions!
  ): ResolveResult!

  addFile(
    ipfsUrl: String!
    fileEntry: FileEntry!
    options: AddFileOptions
  ): AddResult!

  addFolder(
    ipfsUrl: String!
    directoryEntry: DirectoryBlob!
    options: AddFileOptions
  ): [AddResult!]!
}

type CatFileOptions {
  headers: [Http_Header!]
  queryString: [Http_UrlParam!]
  offset: Int32
  length: Int32
  timeout: UInt32
}

type IpfsOptions {
  provider: String!
  fallbackProviders: [String!]
}

type ResolveResult {
  cid: String!
  provider: String!
}

type AddResult {
  name: String!
  hash: String!
  size: String!
}

type AddFileOptions {
  wrapWithDirectory: Boolean
  pin: Boolean
  onlyHash: Boolean
}

type DirectoryEntry {
  name: String!
  directories: [DirectoryEntry!]!
  files: [FileEntry!]!
}

type FileEntry {
  name: String!
  data: Bytes!
}

type DirectoryBlob {
  directories: [DirectoryEntry!]!
  files: [FileEntry!]!
}
